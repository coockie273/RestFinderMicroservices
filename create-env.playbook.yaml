- name: run local terraform
  hosts: localhost
  tasks:
    - name: Run terraform
      terraform:
        project_path: "./tf"
        force_init: yes
        state: present
      register: trfrm

    - name: Add tg host
      add_host:
        name: docker_server
        groups: nodes
        ansible_host: "{{ trfrm.outputs.servers.value.docker_server}}"
        ansible_ssh_private_key_file: ~/.ssh/id_rsa
        ansible_ssh_common_args: "-o StrictHostKeyChecking=no"

- name: Get secrets from vault
  hosts: localhost
  tasks:
    - name: Get db secrets from vault
      community.hashi_vault.vault_kv2_get:
        path: db
      register: db

    - name: Get bot secrets from vault
      community.hashi_vault.vault_kv2_get:
        path: bot
      register: bot

- name: Modify properties of the db
  hosts: localhost
  tasks:
    - name: Modify users db username
      replace:
        path: "{{ sql_init_file }}"
        regexp: "_users_user"
        replace: "{{ db.secret.users_user}}"

    - name: Modify users db password
      replace:
        path: "{{ sql_init_file }}"
        regexp: "_users_user_pwd"
        replace: "{{ db.secret.users_user_pwd }}"

    - name: Modify restaurants db username
      replace:
        path: "{{ sql_init_file }}"
        regexp: "_restaurants_user"
        replace: "{{ db.secret.restaurants_user}}"

    - name: Modify restaurants db password
      replace:
        path: "{{ sql_init_file }}"
        regexp: "_restaurants_user_pwd"
        replace: "{{ db.secret.restaurants_user_pwd }}"

    - name: Modify rating db username
      replace:
        path: "{{ sql_init_file }}"
        regexp: "_rating_user"
        replace: "{{ db.secret.rating_user}}"

    - name: Modify users db password
      replace:
        path: "{{ sql_init_file }}"
        regexp: "_users_user_pwd"
        replace: "{{ db.secret.rating_user_pwd }}"


- name: Modify properties of the services
  hosts: localhost
  tasks:
    - name: Modify db username
      replace:
        path: "{{ compose_file }}"
        regexp: "_token"
        replace: "{{ bot.secret.token}}"

    - name: Modify users db username
      replace:
        path: "{{ compose_file }}"
        regexp: "_users_user"
        replace: "{{ db.secret.users_user}}"

    - name: Modify users db password
      replace:
        path: "{{ compose_file }}"
        regexp: "_users_user_pwd"
        replace: "{{ db.secret.users_user_pwd }}"

    - name: Modify restaurants db username
      replace:
        path: "{{ compose_file }}"
        regexp: "_restaurants_user"
        replace: "{{ db.secret.restaurants_user}}"

    - name: Modify restaurants db password
      replace:
        path: "{{ compose_file }}"
        regexp: "_restaurants_user_pwd"
        replace: "{{ db.secret.restaurants_user_pwd }}"

    - name: Modify rating db username
      replace:
        path: "{{ compose_file }}"
        regexp: "_rating_user"
        replace: "{{ db.secret.rating_user}}"

    - name: Modify users db password
      replace:
        path: "{{ compose_file }}"
        regexp: "_users_user_pwd"
        replace: "{{ db.secret.rating_user_pwd }}"

- name: Wait timeout for creating instances
  hosts: localhost
  connection: local

  tasks:
    - name: Wait for db port 22
      wait_for:
        host: "{{ trfrm.outputs.servers.value.docker_server}}"
        port: 22

- hosts: docker_server
  name: Deploy application with docker
  become: yes
  tasks:
    - name: Update apt package cache
      apt:
        update_cache: yes

    - name: Add key GPG Docker
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add The Docker Repository
      apt_repository:
        repo: deb [arch=amd64] https://download.docker.com/linux/ubuntu focal stable
        state: present

    - name: Docker Installation
      apt:
        name: docker-ce
        state: present

    - name: Install python3-pip
      apt:
        name: python3-pip
        state: present

    - name: Install docker compose pip
      apt:
        name: docker-compose
        state: present

    - name: Copy directory project
      copy:
        src: "{{ project_path }}"
        dest: /home/ubuntu/

    - name: Start docker containers
      docker_compose:
        project_src: "{{ project_path }}"
